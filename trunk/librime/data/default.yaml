# Rime default settings
# vim: set sw=2 sts=2 et:
# encoding: utf-8

schema:
  schema_id: default
  name: Rime

engine:
  processors:
    - key_binder
    - speller
    - punctuator
    - navigator
    - selector
    - express_editor
  segmentors:
    - abc_segmentor
    - punct_segmentor
    - fallback_segmentor
  translators:
    - echo_translator
    - punct_translator
    - r10n_translator
    - trivial_translator

speller:
  alphabet: zyxwvutsrqponmlkjihgfedcba
  delimiter: "'"

translator:
  dictionary: luna_pinyin

punctuator:
  mapping:
    " " : "　"
    "," : ，
    "." : 。
    "<" : [ 《, 〈, «, ‹ ]
    ">" : [ 》, 〉, », › ]
    "/" : [ ／, "/", ⧸, ÷ ]
    "?" : ？
    ";" : ；
    ":" : ：
    "'" : { pair: [ "‘", "’" ] }
    "\"" : { pair: [ "“", "”" ] }
    "\\" : [ 、, "\\", ＼, ⧹ ]
    "|" : [ ｜, "|" ]
    "`" : [ ｀, "`" ]
    "~" : [ ～, "~" ]
    "!" : ！
    "@" : [ ·, ＠, "@", ☯ ]
    "#" : [ ＃, "#", ⌘, ⌨ ]
    "%" : [ ％, "%", ° ]
    "$" : [ ￥, "$" ]
    "^" : [ ……, …, "^" ]
    "&" : [ ＆, "&" ]
    "*" : [ ＊, "*", ×, ※, ❂ ]
    "(" : [ （, "(" ]
    ")" : [ ）, ")" ]
    "-" : [ －, "-" ]
    "_" : [ ——, "_" ]
    "+" : [ ＋, "+" ]
    "=" : [ ＝, "=" ]
    "[" : [ 「, 【, 〔, ［ ]
    "]" : [ 」, 】, 〕, ］ ]
    "{" : [ 『, 〖, ｛ ]
    "}" : [ 』, 〗, ｝ ]

key_binder:
  bindings:
    # Emacs style
    - { when: composing, accept: Control+p, send: Up }
    - { when: composing, accept: Control+n, send: Down }
    - { when: composing, accept: Control+b, send: Left }
    - { when: composing, accept: Control+f, send: Right }
    - { when: composing, accept: Control+a, send: Home }
    - { when: composing, accept: Control+e, send: End }
    - { when: composing, accept: Control+g, send: Escape }
    - { when: composing, accept: Alt+v, send: Page_Up }
    - { when: composing, accept: Control+v, send: Page_Down }
    # commonly used paging keys
    - { when: composing, accept: ISO_Left_Tab, send: Page_Up }
    - { when: composing, accept: Shift+Tab, send: Page_Up }
    - { when: composing, accept: Tab, send: Page_Down }
    - { when: paging, accept: minus, send: Page_Up }
    - { when: composing, accept: equal, send: Page_Down }
    - { when: paging, accept: comma, send: Page_Up }
    - { when: composing, accept: period, send: Page_Down }
